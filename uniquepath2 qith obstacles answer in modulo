import java.util.*;
public class Solution {
   
     public static int mazeObstacles(int n, int m, ArrayList<ArrayList<Integer>> mat) {
      int dp[][]=new int[n][m];            
        for(int[] row:dp)
        {
            Arrays.fill(row,-1);
        }
        return f(n-1,m-1,mat,dp);
    }
     
 public static int f(int i,int j,ArrayList<ArrayList<Integer>> a,int[][] dp)
    {
        if(i>=0 && j>=0 && a.get(i).get(j)==-1)            --base case
        {
            return 0;
        }
         if(i==0 && j==0)       --base case
        {
            return 1;
        }
        if(i<0 || j<0)           --base case
        {
            return 0;
        }
        if(dp[i][j]!=-1)           --memoazation
        {
            return dp[i][j];
        }
        int up=f(i-1,j,a,dp);
        int left=f(i,j-1,a,dp);
     int mod=(int)(1e9+7);
        return dp[i][j]=(up+left)%mod;
       
    }

}
